pipeline {
    agent any
    
    tools {
        maven 'Maven3'
    }
    
    environment {
        DOCKER_IMAGE = "hello-app"
        DOCKER_TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        stage('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞') {
            steps {
                echo '–ö–æ–¥ –ø–æ–ª—É—á–µ–Ω –∏–∑ GitHub'
            }
        }
        
        stage('–°–±–æ—Ä–∫–∞ –∏ —Ç–µ—Å—Ç—ã') {
            steps {
                echo '–°–±–æ—Ä–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'
                sh 'mvn clean package -DskipTests'
            }
        }
        
        stage('–°–±–æ—Ä–∫–∞ Docker Image') {
            steps {
                echo '–°–æ–∑–¥–∞–Ω–∏–µ Docker –æ–±—Ä–∞–∑–∞...'
                script {
                    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
                    sh '''
                        if ! command -v docker &> /dev/null; then
                            echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
                            curl -fsSL https://get.docker.com | sh
                            usermod -aG docker jenkins
                        fi
                    '''
                    dockerImage = docker.build("${env.DOCKER_IMAGE}:${env.DOCKER_TAG}")
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                echo '–ü—É—à –æ–±—Ä–∞–∑–∞ –≤ registry...'
                script 
                    echo "–û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω: ${env.DOCKER_IMAGE}:${env.DOCKER_TAG}"
                }
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                echo '–î–µ–ø–ª–æ–π –≤ Kubernetes'
                // –ó–¥–µ—Å—å –∫–æ–º–∞–Ω–¥—ã kubectl apply –∏ —Ç.–¥.
            }
        }
    }
    
    post {
        always {
            echo '–ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–µ—Ä—à–µ–Ω'
            sh 'docker system prune -f || true'
        }
        success {
            echo '–ü–ê–ô–ü–õ–ê–ô–ù –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù! üéâ'
        }
    }
}
