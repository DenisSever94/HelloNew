pipeline {
    agent any
    
    // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –≤–µ–±—Ö—É–∫–∞
    triggers {
        githubPush()
    }
    
    stages {
        stage('Webhook Debug') {
            steps {
                echo 'üéØ –í–µ–±—Ö—É–∫ –ø–æ–ª—É—á–µ–Ω!'
                script {
                    // –ü–æ–∫–∞–∂–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–ø—É—Å–∫–∞
                    echo "Build URL: ${env.BUILD_URL}"
                    echo "Git Commit: ${env.GIT_COMMIT ?: 'Not available'}"
                    echo "Git Branch: ${env.GIT_BRANCH ?: 'Not available'}"
                    
                    // –ü–æ–∫–∞–∂–µ–º –ø—Ä–∏—á–∏–Ω—É –∑–∞–ø—É—Å–∫–∞
                    def causes = currentBuild.getBuildCauses()
                    echo "Build causes: ${causes}"
                }
            }
        }
        
        stage('Checkout Code') {
            steps {
                echo 'üì• –ó–∞–±–∏—Ä–∞–µ–º –∫–æ–¥ –∏–∑ GitHub...'
                checkout scm
                sh 'git log -1 --oneline'
            }
        }
        
        stage('Simple Build') {
            steps {
                echo 'üî® –ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞...'
                sh '''
                    echo "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
                    echo "–§–∞–π–ª—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:"
                    ls -la
                '''
            }
        }
    }
    
    post {
        success {
            echo '‚úÖ –ü–∞–π–ø–ª–∞–π–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –ø–æ –≤–µ–±—Ö—É–∫—É!'
            emailext (
                subject: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: "–ü–∞–π–ø–ª–∞–π–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!",
                to: "denissedih0503@gmail.com"
            )
        }
        failure {
            echo '‚ùå –ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –æ—à–∏–±–∫–æ–π'
        }
    }
}
